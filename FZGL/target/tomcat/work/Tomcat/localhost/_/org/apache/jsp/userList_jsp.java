/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2021-07-12 02:59:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class userList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <title>用户列表</title>\r\n");
      out.write("    <meta name=\"renderer\" content=\"webkit\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"layui/css/layui.css\" media=\"all\">\r\n");
      out.write("    <!-- 注意：如果你直接复制所有代码到本地，上述css路径需要改成你本地的 -->\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<table class=\"layui-hide\" id=\"test\" lay-filter=\"test\"></table>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/html\" id=\"barDemo\">\r\n");
      out.write("    <a class=\"layui-btn layui-btn-xs\" lay-event=\"edit\">编辑</a>\r\n");
      out.write("    <a class=\"layui-btn layui-btn-danger layui-btn-xs\" lay-event=\"del\">删除</a>\r\n");
      out.write("</script>\r\n");
      out.write("<script type=\"text/html\" id=\"updateUser\">\r\n");
      out.write("    <form class=\"layui-form\" lay-filter=\"updateForm\">\r\n");
      out.write("        <div class=\"layui-form-item\">\r\n");
      out.write("            <label class=\"layui-form-label\">ID</label>\r\n");
      out.write("            <div class=\"layui-input-block\">\r\n");
      out.write("                <input type=\"text\" name=\"id\" lay-verify=\"title\" autocomplete=\"off\" placeholder=\"\"\r\n");
      out.write("                       class=\"layui-input\" disabled>\r\n");
      out.write("            </div>\r\n");
      out.write("            <label class=\"layui-form-label\">用户名</label>\r\n");
      out.write("            <div class=\"layui-input-block\">\r\n");
      out.write("                <input type=\"text\" name=\"username\" lay-verify=\"title\" autocomplete=\"off\" placeholder=\"用户名不能为空\"\r\n");
      out.write("                       class=\"layui-input\">\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"layui-form-item\">\r\n");
      out.write("            <label class=\"layui-form-label\">密码</label>\r\n");
      out.write("            <div class=\"layui-input-block\">\r\n");
      out.write("                <input type=\"password\" name=\"password\" lay-verify=\"title\" autocomplete=\"off\" placeholder=\"请输入6~16位的密码\"\r\n");
      out.write("                       class=\"layui-input\">\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"layui-form-item\">\r\n");
      out.write("            <label class=\"layui-form-label\">姓名</label>\r\n");
      out.write("            <div class=\"layui-input-block\">\r\n");
      out.write("                <input type=\"text\" name=\"name\" lay-verify=\"title\" autocomplete=\"off\" placeholder=\"\"\r\n");
      out.write("                       class=\"layui-input\">\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"layui-form-item\">\r\n");
      out.write("            <label class=\"layui-form-label\">手机号</label>\r\n");
      out.write("            <div class=\"layui-input-block\">\r\n");
      out.write("                <input type=\"text\" name=\"tel\" lay-verify=\"title\" autocomplete=\"off\" placeholder=\"请填写11位手机号\"\r\n");
      out.write("                       class=\"layui-input\">\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"layui-form-item\">\r\n");
      out.write("            <label class=\"layui-form-label\">地址</label>\r\n");
      out.write("            <div class=\"layui-input-block\">\r\n");
      out.write("                <input type=\"text\" name=\"address\" lay-verify=\"title\" autocomplete=\"off\" placeholder=\"\"\r\n");
      out.write("                       class=\"layui-input\">\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"layui-form-item\">\r\n");
      out.write("            <label class=\"layui-form-label\">用户类型</label>\r\n");
      out.write("            <div class=\"layui-input-block\">\r\n");
      out.write("                <select name=\"type\" lay-filter=\"type\" id=\"select1\">\r\n");
      out.write("                    ");
      out.write("\r\n");
      out.write("                    <option value=\"1\" selected=\"\">大众会员</option>\r\n");
      out.write("                    <option value=\"2\">商家</option>\r\n");
      out.write("                    <option value=\"3\">管理员</option>\r\n");
      out.write("                </select>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </form>\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script src=\"layui/layui.js\" charset=\"utf-8\"></script>\r\n");
      out.write("<script src=\"js/jquery-3.6.0.js\" charset=\"utf-8\"></script>\r\n");
      out.write("<!-- 注意：如果你直接复制所有代码到本地，上述 JS 路径需要改成你本地的 -->\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("    layui.use(['table', 'layer', 'form'], function () {\r\n");
      out.write("        var table = layui.table;\r\n");
      out.write("        var layer = layui.layer;\r\n");
      out.write("        var form = layui.form;\r\n");
      out.write("        //表格渲染\r\n");
      out.write("        table.render({\r\n");
      out.write("            //元素，渲染什么元素\r\n");
      out.write("            elem: '#test'\r\n");
      out.write("            //请求后端的路径\r\n");
      out.write("            , url: 'user/userList'\r\n");
      out.write("            , title: '用户数据表'\r\n");
      out.write("            , parseData: function (result) {\r\n");
      out.write("                return {\r\n");
      out.write("                    //默认 是成功\r\n");
      out.write("                    code: 0,\r\n");
      out.write("                    count: result.count,\r\n");
      out.write("                    data: result.list\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("            , cols: [[\r\n");
      out.write("                {type: 'checkbox', fixed: 'left'}\r\n");
      out.write("                //filed 后端映射属性名  title列头名 sort：true  排序：开启\r\n");
      out.write("                , {field: 'id', title: 'ID', width: 80, fixed: 'left', unresize: true, sort: true}\r\n");
      out.write("                , {field: 'username', title: '用户名', width: 120, edit: 'text'}\r\n");
      out.write("                , {field: 'password', title: '密码', width: 120, edit: 'text'}\r\n");
      out.write("                , {field: 'name', title: '姓名', width: 120, edit: 'text'}\r\n");
      out.write("                , {field: 'tel', title: '联系方式', width: 120, edit: 'text'}\r\n");
      out.write("                , {\r\n");
      out.write("                    field: 'type', title: '用户类型', width: 150, edit: 'text', templet: function (res) {\r\n");
      out.write("                        if (res.type == 1) {\r\n");
      out.write("                            return \"大众会员\";\r\n");
      out.write("                        } else if (res.type == 2) {\r\n");
      out.write("                            return \"商家\";\r\n");
      out.write("                        } else {\r\n");
      out.write("                            return \"管理员\";\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("                , {field: 'address', title: '城市', width: 100}\r\n");
      out.write("                , {fixed: 'right', title: '操作', toolbar: '#barDemo', width: 150}\r\n");
      out.write("            ]]\r\n");
      out.write("            , page: true\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        //监听行工具事件\r\n");
      out.write("        table.on('tool(test)', function (obj) {\r\n");
      out.write("            //obj 包含被点击的一条数据，也包含被点击的按钮\r\n");
      out.write("            var data = obj.data;\r\n");
      out.write("            //console.log(obj)\r\n");
      out.write("            if (obj.event === 'del') {\r\n");
      out.write("                layer.open({\r\n");
      out.write("                    //弹框内的内容，内容内容写到script标签内\r\n");
      out.write("                    //获取修改用户的标签的script标签的dom对象\r\n");
      out.write("                    content: \"确定要删除吗？\"\r\n");
      out.write("                    , type: 0\r\n");
      out.write("                    , area: ['500px', '600px']\r\n");
      out.write("                    //btn button 弹出层内置三个按钮\r\n");
      out.write("                    , btn: ['立即删除','取消']\r\n");
      out.write("                    //三个按钮各自调用方法\r\n");
      out.write("                    , yes: function (index, layero) {\r\n");
      out.write("                        //按钮【按钮一】的回调\r\n");
      out.write("                        $.ajax({\r\n");
      out.write("                            type: \"post\",\r\n");
      out.write("                            url:\"user/deleteUser\",\r\n");
      out.write("                            data:{\r\n");
      out.write("                                id: data.id\r\n");
      out.write("                            },\r\n");
      out.write("                            datatype: \"json\",\r\n");
      out.write("                            success:function (result) {\r\n");
      out.write("                                //result = eval(\"(\" + result + \")\");\r\n");
      out.write("                                if (result.status) {\r\n");
      out.write("                                    alert(\"删除成功，刷新本页面\");\r\n");
      out.write("                                    location.reload();\r\n");
      out.write("                                } else {\r\n");
      out.write("                                    alert(\"删除失败，请重试\");\r\n");
      out.write("                                }\r\n");
      out.write("                            }\r\n");
      out.write("                        })\r\n");
      out.write("                    }\r\n");
      out.write("                    , btn2: function (index, layero) {\r\n");
      out.write("                        //按钮【按钮二】的回调\r\n");
      out.write("\r\n");
      out.write("                        //return false 开启该代码可禁止点击该按钮关闭\r\n");
      out.write("                    }\r\n");
      out.write("                    //点击按钮一瞬间执行，在显示弹框之前加载完毕\r\n");
      out.write("                    , success: function () {\r\n");
      out.write("                        //return false 开启该代码可禁止点击该按钮关闭\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            } else if (obj.event === 'edit') {\r\n");
      out.write("                //获取所有input dom对象\r\n");
      out.write("                var inputs = $(\"input\");\r\n");
      out.write("                //layer.open 通过layui内置layer弹出对象打开一个弹出层\r\n");
      out.write("                layer.open({\r\n");
      out.write("                    //弹框内的内容，内容内容写到script标签内\r\n");
      out.write("                    //获取修改用户的标签的script标签的dom对象\r\n");
      out.write("                    content: $(\"#updateUser\").html()\r\n");
      out.write("                    , type: 1\r\n");
      out.write("                    , area: ['500px', '600px']\r\n");
      out.write("                    //btn button 弹出层内置三个按钮\r\n");
      out.write("                    , btn: ['立即提交', '重置', '取消']\r\n");
      out.write("                    //三个按钮各自调用方法\r\n");
      out.write("                    , yes: function (index, layero) {\r\n");
      out.write("                        //按钮【按钮一】的回调\r\n");
      out.write("                        $.ajax({\r\n");
      out.write("                            type: \"post\",\r\n");
      out.write("                            url:\"user/updateUser\",\r\n");
      out.write("                            data:{\r\n");
      out.write("                                updateValue :function () {\r\n");
      out.write("                                 //   把用户修改弹出框的form表单数据一起打包发给后端\r\n");
      out.write("                                    return JSON.stringify(form.val(\"updateForm\"));\r\n");
      out.write("                            }},\r\n");
      out.write("                            datatype: \"json\",\r\n");
      out.write("                            success:function (result) {\r\n");
      out.write("                                //result = eval(\"(\" + result + \")\");\r\n");
      out.write("                                if (result.status) {\r\n");
      out.write("                                    alert(\"修改成功，刷新本页面\");\r\n");
      out.write("                                    location.reload();\r\n");
      out.write("                                } else {\r\n");
      out.write("                                    alert(\"修改失败，请重试\");\r\n");
      out.write("                                }\r\n");
      out.write("                            }\r\n");
      out.write("                        })\r\n");
      out.write("                    }\r\n");
      out.write("                    , btn2: function (index, layero) {\r\n");
      out.write("                        //按钮【按钮二】的回调\r\n");
      out.write("                        form.val(\r\n");
      out.write("                            \"updateForm\", {\r\n");
      out.write("                                \"id\": data.id,\r\n");
      out.write("                                \"username\": data.username,\r\n");
      out.write("                                \"password\": data.password,\r\n");
      out.write("                                \"name\": data.name,\r\n");
      out.write("                                \"tel\": data.tel,\r\n");
      out.write("                                \"address\": data.address,\r\n");
      out.write("                                \"type\": data.type,\r\n");
      out.write("                            }\r\n");
      out.write("                        );\r\n");
      out.write("                        form.render();\r\n");
      out.write("                        return false;\r\n");
      out.write("                        //return false 开启该代码可禁止点击该按钮关闭\r\n");
      out.write("                    }\r\n");
      out.write("                    , btn3: function (index, layero) {\r\n");
      out.write("                        //按钮【按钮三】的回调\r\n");
      out.write("\r\n");
      out.write("                        //return false 开启该代码可禁止点击该按钮关闭\r\n");
      out.write("                    }\r\n");
      out.write("                    //点击按钮一瞬间执行，在显示弹框之前加载完毕\r\n");
      out.write("                    , success: function () {\r\n");
      out.write("                        form.val(\r\n");
      out.write("                            \"updateForm\", {\r\n");
      out.write("                                \"id\": data.id,\r\n");
      out.write("                                \"username\": data.username,\r\n");
      out.write("                                \"password\": data.password,\r\n");
      out.write("                                \"name\": data.name,\r\n");
      out.write("                                \"tel\": data.tel,\r\n");
      out.write("                                \"address\": data.address,\r\n");
      out.write("                                \"type\": data.type,\r\n");
      out.write("                            }\r\n");
      out.write("                        );\r\n");
      out.write("                        form.render()\r\n");
      out.write("                        //return false 开启该代码可禁止点击该按钮关闭\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
